services: # Defines the services to be executed in containers.
  db: # Name of the service for the PostgreSQL database.
    image: postgres:17 # Specifies the Docker image for PostgreSQL version 17.
    environment:
      POSTGRES_DB: ${DB_NAME} # Database name.
      POSTGRES_USER: ${USERNAME} # Database user
      POSTGRES_PASSWORD: ${PASSWORD} # Password of the superuser
    volumes: # Configures volumes to persist PostgreSQL data outside the container.
      - db_data:/var/lib/postgresql/data # Mount the db_data volume in the PostgreSQL data directory, preserving the data on restarts.
    ports: # Map ports between container and host to allow external connections.
      - “5432:5432” # Map PostgreSQL port 5432 in the container to port 5432 on the host.

  etl: # Service name for the Python ETL application.
    build: # Configuration to build the Docker image from a Dockerfile.
      context: .  # Specifies the context directory (the current directory) to build the image from.
      dockerfile: Dockerfile # Name of the Dockerfile to build the image.
    environment:
      DB_NAME: ${DB_NAME} # Name of the database.
      USERNAME: ${USERNAME} # Database user
      PASSWORD: ${PASSWORD} # Password of the superuser
      HOST: ${HOST}
      PORT: “5432”

    depends_on: # Defines that the 'etl' service depends on the 'db' service being running.
      - db # Indicates that the PostgreSQL container must be running before starting the ETL service.
    
    volumes: # Mounts volumes in the ETL container.
      - .:/coding_challenge # Mounts the current directory in the container, allowing access to application files inside the container.

volumes: # Defines external volumes for persistent storage.
  db_data: # Name of the volume to store PostgreSQL data.